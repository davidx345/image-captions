name: Deploy to Render

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test-frontend:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: my-project/package-lock.json
    
    - name: Install frontend dependencies
      working-directory: ./my-project
      run: npm ci
    
    - name: Build frontend
      working-directory: ./my-project
      run: npm run build
    
    - name: Run frontend type check
      working-directory: ./my-project
      run: npx tsc --noEmit

  test-backend:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install backend dependencies
      working-directory: ./image-captioning-project
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Test backend imports
      working-directory: ./image-captioning-project
      run: |
        python -c "import config; import src.inference.generate_captions"
    
    # Note: We can't run full backend tests without Gemini API key
    # In a real scenario, you'd mock the API calls for testing

  deploy:
    needs: [test-frontend, test-backend]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Deploy to Render (Backend)
      run: |
        echo "Backend deployment will be triggered by Render's GitHub integration"
        echo "Make sure your Render service is connected to this repository"
        echo "Backend service should have root directory: image-captioning-project"
    
    - name: Deploy to Render (Frontend)  
      run: |
        echo "Frontend deployment will be triggered by Render's GitHub integration"
        echo "Make sure your Render static site is connected to this repository"
        echo "Frontend service should have root directory: my-project"
        
    - name: Deployment status
      run: |
        echo "âœ… CI/CD pipeline completed"
        echo "ðŸš€ Deployments will be handled by Render's auto-deploy feature"
        echo "Check your Render dashboard for deployment status"
